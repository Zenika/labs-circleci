version: 2
jobs:
  build:
    docker:
      - image: zenikalabs/circleci:1
    working_directory: ~/build
    steps:
      - checkout

      - setup_remote_docker

      - run:
          name: Download dependencies (front)
          working_directory: front
          command: yarn install

      - run:
          name: Front tests
          working_directory: front
          command: yarn test

      - run:
          name: Build Docker image (front)
          working_directory: front
          command: yarn build && docker build -t front .

      - run:
          name: Deploy app to testing environment
          working_directory: .circleci
          command: |
              $(aws ecr get-login --no-include-email --region eu-central-1)
              export VERSION=${CIRCLE_BRANCH}
              export STACK_NAME=${CIRCLE_BRANCH}
              docker tag front <REPOSITORY_URI>:${VERSION}
              docker push <REPOSITORY_URI>:${VERSION}
              rancher-compose --file docker-compose.yml -p ${STACK_NAME} up --force-upgrade --pull -d
              rancher-compose --file docker-compose.yml -p ${STACK_NAME} up --upgrade --confirm-upgrade -d

      - run:
          name: End-to-end Tests
          working_directory: front
          command:  |
              export NODE_ENV=ci
              export APP_URL=http://${CIRCLE_BRANCH}.<PROJECT_SUBDOMAIN>
              yarn e2e

      - run:
          name: Deploy app to production
          working_directory: .circleci
          command: |
              if [ "${CIRCLE_BRANCH}" == "master" ]
              then
                  $(aws ecr get-login --no-include-email --region eu-central-1)
                  export VERSION=latest
                  export STACK_NAME=prod
                  docker tag front <REPOSITORY_URI>:${VERSION}
                  docker push <REPOSITORY_URI>:${VERSION}
                  rancher-compose --file docker-compose.yml -p ${STACK_NAME} up --force-upgrade --pull -d
                  rancher-compose --file docker-compose.yml -p ${STACK_NAME} up --upgrade --confirm-upgrade -d
              else
                  echo "Not on branch master, skipping."
              fi
